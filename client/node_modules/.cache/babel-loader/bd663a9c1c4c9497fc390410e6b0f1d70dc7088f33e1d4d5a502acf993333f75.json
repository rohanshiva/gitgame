{"ast":null,"code":"import { statusCodeToReasonPhrase, reasonPhraseToStatusCode } from './utils';\n/**\n * Returns the reason phrase for the given status code.\n * If the given status code does not exist, an error is thrown.\n *\n * @param {number|string} statusCode The HTTP status code\n * @returns {string} The associated reason phrase (e.g. \"Bad Request\", \"OK\")\n * */\nexport function getReasonPhrase(statusCode) {\n  var result = statusCodeToReasonPhrase[statusCode.toString()];\n  if (!result) {\n    throw new Error(\"Status code does not exist: \" + statusCode);\n  }\n  return result;\n}\n/**\n * Returns the status code for the given reason phrase.\n * If the given reason phrase does not exist, undefined is returned.\n *\n * @param {string} reasonPhrase The HTTP reason phrase (e.g. \"Bad Request\", \"OK\")\n * @returns {string} The associated status code\n * */\nexport function getStatusCode(reasonPhrase) {\n  var result = reasonPhraseToStatusCode[reasonPhrase];\n  if (!result) {\n    throw new Error(\"Reason phrase does not exist: \" + reasonPhrase);\n  }\n  return result;\n}\n/**\n * @deprecated\n *\n * Returns the reason phrase for the given status code.\n * If the given status code does not exist, undefined is returned.\n *\n * Deprecated in favor of getReasonPhrase\n *\n * @param {number|string} statusCode The HTTP status code\n * @returns {string|undefined} The associated reason phrase (e.g. \"Bad Request\", \"OK\")\n * */\nexport var getStatusText = getReasonPhrase;","map":{"version":3,"names":["statusCodeToReasonPhrase","reasonPhraseToStatusCode","getReasonPhrase","statusCode","result","toString","Error","getStatusCode","reasonPhrase","getStatusText"],"sources":["/home/runner/work/gitgame/gitgame/client/node_modules/http-status-codes/build/es/utils-functions.js"],"sourcesContent":["import { statusCodeToReasonPhrase, reasonPhraseToStatusCode, } from './utils';\n/**\n * Returns the reason phrase for the given status code.\n * If the given status code does not exist, an error is thrown.\n *\n * @param {number|string} statusCode The HTTP status code\n * @returns {string} The associated reason phrase (e.g. \"Bad Request\", \"OK\")\n * */\nexport function getReasonPhrase(statusCode) {\n    var result = statusCodeToReasonPhrase[statusCode.toString()];\n    if (!result) {\n        throw new Error(\"Status code does not exist: \" + statusCode);\n    }\n    return result;\n}\n/**\n * Returns the status code for the given reason phrase.\n * If the given reason phrase does not exist, undefined is returned.\n *\n * @param {string} reasonPhrase The HTTP reason phrase (e.g. \"Bad Request\", \"OK\")\n * @returns {string} The associated status code\n * */\nexport function getStatusCode(reasonPhrase) {\n    var result = reasonPhraseToStatusCode[reasonPhrase];\n    if (!result) {\n        throw new Error(\"Reason phrase does not exist: \" + reasonPhrase);\n    }\n    return result;\n}\n/**\n * @deprecated\n *\n * Returns the reason phrase for the given status code.\n * If the given status code does not exist, undefined is returned.\n *\n * Deprecated in favor of getReasonPhrase\n *\n * @param {number|string} statusCode The HTTP status code\n * @returns {string|undefined} The associated reason phrase (e.g. \"Bad Request\", \"OK\")\n * */\nexport var getStatusText = getReasonPhrase;\n"],"mappings":"AAAA,SAASA,wBAAwB,EAAEC,wBAAwB,QAAS,SAAS;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,UAAU,EAAE;EACxC,IAAIC,MAAM,GAAGJ,wBAAwB,CAACG,UAAU,CAACE,QAAQ,EAAE,CAAC;EAC5D,IAAI,CAACD,MAAM,EAAE;IACT,MAAM,IAAIE,KAAK,CAAC,8BAA8B,GAAGH,UAAU,CAAC;EAChE;EACA,OAAOC,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,aAAaA,CAACC,YAAY,EAAE;EACxC,IAAIJ,MAAM,GAAGH,wBAAwB,CAACO,YAAY,CAAC;EACnD,IAAI,CAACJ,MAAM,EAAE;IACT,MAAM,IAAIE,KAAK,CAAC,gCAAgC,GAAGE,YAAY,CAAC;EACpE;EACA,OAAOJ,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIK,aAAa,GAAGP,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}