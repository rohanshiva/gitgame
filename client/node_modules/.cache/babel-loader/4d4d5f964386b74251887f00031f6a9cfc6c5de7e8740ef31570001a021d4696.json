{"ast":null,"code":"import _objectSpread from\"/home/runner/work/gitgame/gitgame/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useRef,useEffect,useCallback}from\"react\";import{anchorViewportBoundsRelativeTo,getViewportBounds}from\"../Util\";import\"./EmojiAnimation.css\";import{jsx as _jsx}from\"react/jsx-runtime\";var EmojiSpriteType;(function(EmojiSpriteType){EmojiSpriteType[EmojiSpriteType[\"WHOLE\"]=0]=\"WHOLE\";EmojiSpriteType[EmojiSpriteType[\"PIECE\"]=1]=\"PIECE\";})(EmojiSpriteType||(EmojiSpriteType={}));function getEmojiTransform(_ref){var position=_ref.position,rotation=_ref.rotation;return\"translate3d(\".concat(position.x,\"px, \").concat(position.y,\"px, 0px) rotate(\").concat(rotation.tilt,\"rad)\");}function cloneEmoji(emoji){return JSON.parse(JSON.stringify(emoji));}function EmojiAnimation(_ref2){var count=_ref2.count,createInitialEmoji=_ref2.createInitialEmoji,updateEmoji=_ref2.updateEmoji,onFinish=_ref2.onFinish;var emojiShower=useRef(null);useEffect(function(){var showerGround=emojiShower.current;var showerGroundBounds=getViewportBounds(showerGround);var currentEmojis=[];for(var i=0;i<count;i++){currentEmojis.push(createInitialEmoji(showerGroundBounds));}var update=function update(){currentEmojis=currentEmojis.map(function(emoji){return updateEmoji(emoji,showerGroundBounds);}).flat();updateEmojisDisplay(currentEmojis,showerGround);if(currentEmojis.length===0){onFinish();}else{window.requestAnimationFrame(update);}};window.requestAnimationFrame(update);},[]);var updateEmojisDisplay=function updateEmojisDisplay(emojiSprites,showerGround){var elementsLength=showerGround.getElementsByClassName(\"emoji\").length;var emojisLength=emojiSprites.length;for(var i=elementsLength;i<emojisLength;i++){var element=document.createElement(\"span\");element.className=\"emoji\";showerGround.insertBefore(element,showerGround.firstChild);}for(var _i=emojisLength;_i<elementsLength;_i++){if(showerGround.getElementsByClassName(\"emoji\").length>0){showerGround.removeChild(showerGround.getElementsByClassName(\"emoji\").item(0));}}var elements=showerGround.getElementsByClassName(\"emoji\");for(var _i2=0;_i2<emojiSprites.length;_i2++){var spriteEl=elements[_i2];var _getEmojiStyle=getEmojiStyle(emojiSprites[_i2]),transform=_getEmojiStyle.transform,fontSize=_getEmojiStyle.fontSize,opacity=_getEmojiStyle.opacity;spriteEl.textContent=emojiSprites[_i2].emoji;spriteEl.style.fontSize=fontSize;spriteEl.style.transform=transform;spriteEl.style.opacity=opacity;showerGround.insertBefore(spriteEl,showerGround.firstChild);}};var getEmojiStyle=function getEmojiStyle(emoji){return{transform:getEmojiTransform(emoji),fontSize:\"\".concat(emoji.size,\"px\"),opacity:\"\".concat(emoji.opacity,\"%\")};};return/*#__PURE__*/_jsx(\"div\",{className:\"emoji-shower\",ref:emojiShower});}function EmojiShower(_ref3){var zone=_ref3.zone,emoji=_ref3.emoji,count=_ref3.count,onFinish=_ref3.onFinish;var BASE_DROP_SIZE=28;var BASE_VELOCITY_Y=0.3;var BASE_ACCELERATION_Y=0.08;var BASE_PIECE_VELOCITY_Y=-5;var BASE_PIECE_VELOCITY_X=0.3;var OPACITY_DRAIN=-1;var makePiecesFromWhole=function makePiecesFromWhole(wholeSprite){var pieceVx=BASE_PIECE_VELOCITY_X+Math.random();var pieceVy=BASE_PIECE_VELOCITY_Y+(Math.random()*2-1);var size=Math.ceil(wholeSprite.size/2);var piece1=_objectSpread(_objectSpread({},cloneEmoji(wholeSprite)),{},{type:EmojiSpriteType.PIECE,size:size});piece1.position.y-=1;piece1.velocity={x:pieceVx,y:pieceVy};piece1.rotation={tilt:0.5,speed:0.001};var piece2=cloneEmoji(piece1);piece2.velocity.x*=-1;piece2.rotation={tilt:-0.5,speed:-0.001};return[piece1,piece2];};var createInitialEmoji=useCallback(function(animationContainerBounds){var animationBounds=anchorViewportBoundsRelativeTo(zone,animationContainerBounds);var sizeOffset=BASE_DROP_SIZE/2;var size=BASE_DROP_SIZE+Math.ceil(Math.random()*BASE_DROP_SIZE)-sizeOffset;var px=Math.ceil(Math.random()*(zone.width-size))+animationBounds.topLeft.x;var vy=BASE_VELOCITY_Y+Math.random()*0.2;var ay=BASE_ACCELERATION_Y+Math.random()*0.04;var tilt=Math.random()*2;var rotationalSpeed=Math.random()*0.01;return{version:0,emoji:emoji,type:EmojiSpriteType.WHOLE,size:size,position:{x:px,y:animationBounds.topLeft.y},velocity:{x:0,y:vy},acceleration:{y:ay},rotation:{tilt:tilt,//radians,\nspeed:rotationalSpeed//radians\n},opacity:100};},[]);var updateEmoji=useCallback(function(emoji,animationContainerBounds){var animationBounds=anchorViewportBoundsRelativeTo(zone,animationContainerBounds);var bottomBoundary=animationBounds.bottomRight.y-emoji.size;var topBoundary=animationBounds.topLeft.y;var leftBoundary=animationBounds.topLeft.x;var rightBoundary=animationBounds.bottomRight.x-emoji.size;if(emoji.type===EmojiSpriteType.PIECE){if(emoji.position.x<=leftBoundary||emoji.position.x>=rightBoundary){return[];}if(emoji.position.y>=bottomBoundary){return[];}if(emoji.opacity<=0){return[];}}if(emoji.type===EmojiSpriteType.WHOLE){if(emoji.position.y>=bottomBoundary){return makePiecesFromWhole(emoji);}}var newEmoji=cloneEmoji(emoji);newEmoji.velocity.y+=emoji.acceleration.y;newEmoji.position.x=Math.min(Math.max(newEmoji.position.x+emoji.velocity.x,leftBoundary),rightBoundary);newEmoji.version++;newEmoji.position.y=Math.min(Math.max(newEmoji.position.y+emoji.velocity.y,topBoundary),bottomBoundary);newEmoji.rotation.tilt+=emoji.rotation.speed;if(newEmoji.type===EmojiSpriteType.PIECE){newEmoji.opacity+=OPACITY_DRAIN;}return[newEmoji];},[]);return/*#__PURE__*/_jsx(EmojiAnimation,{count:count,updateEmoji:updateEmoji,createInitialEmoji:createInitialEmoji,onFinish:onFinish});}export default EmojiShower;","map":{"version":3,"names":["useRef","useEffect","useCallback","anchorViewportBoundsRelativeTo","getViewportBounds","jsx","_jsx","EmojiSpriteType","getEmojiTransform","_ref","position","rotation","concat","x","y","tilt","cloneEmoji","emoji","JSON","parse","stringify","EmojiAnimation","_ref2","count","createInitialEmoji","updateEmoji","onFinish","emojiShower","showerGround","current","showerGroundBounds","currentEmojis","i","push","update","map","flat","updateEmojisDisplay","length","window","requestAnimationFrame","emojiSprites","elementsLength","getElementsByClassName","emojisLength","element","document","createElement","className","insertBefore","firstChild","removeChild","item","elements","spriteEl","_getEmojiStyle","getEmojiStyle","transform","fontSize","opacity","textContent","style","size","ref","EmojiShower","_ref3","zone","BASE_DROP_SIZE","BASE_VELOCITY_Y","BASE_ACCELERATION_Y","BASE_PIECE_VELOCITY_Y","BASE_PIECE_VELOCITY_X","OPACITY_DRAIN","makePiecesFromWhole","wholeSprite","pieceVx","Math","random","pieceVy","ceil","piece1","_objectSpread","type","PIECE","velocity","speed","piece2","animationContainerBounds","animationBounds","sizeOffset","px","width","topLeft","vy","ay","rotationalSpeed","version","WHOLE","acceleration","bottomBoundary","bottomRight","topBoundary","leftBoundary","rightBoundary","newEmoji","min","max"],"sources":["/home/runner/work/gitgame/gitgame/client/src/components/editor/animation/EmojiAnimation.tsx"],"sourcesContent":["import { useRef, useEffect, useCallback } from \"react\";\nimport {\n  anchorViewportBoundsRelativeTo,\n  getViewportBounds,\n  ViewportBounds,\n} from \"../Util\";\nimport \"./EmojiAnimation.css\";\n\ninterface EmojiAnimationProps {\n  count: number;\n  createInitialEmoji: (animationContainerBounds: ViewportBounds) => EmojiSprite;\n  updateEmoji: (\n    emoji: EmojiSprite,\n    animationContainerBounds: ViewportBounds\n  ) => EmojiSprite[];\n  onFinish: () => void;\n}\n\nenum EmojiSpriteType {\n  WHOLE,\n  PIECE,\n}\n\ninterface EmojiSprite {\n  version: number; // debugging\n  emoji: string;\n  type: EmojiSpriteType;\n  size: number;\n  position: {\n    x: number;\n    y: number;\n  };\n  velocity: {\n    x: number;\n    y: number;\n  };\n  acceleration: {\n    y: number;\n  };\n  rotation: {\n    tilt: number; //radians,\n    speed: number; //radians\n  };\n  opacity: number;\n}\n\nfunction getEmojiTransform({ position, rotation }: EmojiSprite) {\n  return `translate3d(${position.x}px, ${position.y}px, 0px) rotate(${rotation.tilt}rad)`;\n}\n\nfunction cloneEmoji(emoji: EmojiSprite) {\n  return JSON.parse(JSON.stringify(emoji));\n}\n\nfunction EmojiAnimation({\n  count,\n  createInitialEmoji,\n  updateEmoji,\n  onFinish,\n}: EmojiAnimationProps) {\n  const emojiShower = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const showerGround = emojiShower.current as HTMLDivElement;\n    const showerGroundBounds = getViewportBounds(showerGround);\n\n    let currentEmojis: EmojiSprite[] = [];\n    for (let i = 0; i < count; i++) {\n      currentEmojis.push(createInitialEmoji(showerGroundBounds));\n    }\n\n    const update = () => {\n      currentEmojis = currentEmojis\n        .map((emoji) => {\n          return updateEmoji(emoji, showerGroundBounds);\n        })\n        .flat();\n\n      updateEmojisDisplay(currentEmojis, showerGround);\n      if (currentEmojis.length === 0) {\n        onFinish();\n      } else {\n        window.requestAnimationFrame(update);\n      }\n    };\n\n    window.requestAnimationFrame(update);\n  }, []);\n\n  const updateEmojisDisplay = (\n    emojiSprites: EmojiSprite[],\n    showerGround: HTMLDivElement\n  ) => {\n    const elementsLength = showerGround.getElementsByClassName(\"emoji\").length;\n    const emojisLength = emojiSprites.length;\n\n    for (let i = elementsLength; i < emojisLength; i++) {\n      const element = document.createElement(\"span\");\n      element.className = \"emoji\";\n      showerGround.insertBefore(\n        element,\n        showerGround.firstChild as HTMLElement\n      );\n    }\n\n    for (let i = emojisLength; i < elementsLength; i++) {\n      if (showerGround.getElementsByClassName(\"emoji\").length > 0) {\n        showerGround.removeChild(\n          showerGround.getElementsByClassName(\"emoji\").item(0) as Element\n        );\n      }\n    }\n\n    const elements = showerGround.getElementsByClassName(\"emoji\");\n    for (let i = 0; i < emojiSprites.length; i++) {\n      const spriteEl = elements[i] as HTMLSpanElement;\n      const { transform, fontSize, opacity } = getEmojiStyle(emojiSprites[i]);\n      spriteEl.textContent = emojiSprites[i].emoji;\n      spriteEl.style.fontSize = fontSize;\n      spriteEl.style.transform = transform;\n      spriteEl.style.opacity = opacity;\n      showerGround.insertBefore(spriteEl, showerGround.firstChild);\n    }\n  };\n\n  const getEmojiStyle = (emoji: EmojiSprite) => {\n    return {\n      transform: getEmojiTransform(emoji),\n      fontSize: `${emoji.size}px`,\n      opacity: `${emoji.opacity}%`,\n    };\n  };\n\n  return <div className=\"emoji-shower\" ref={emojiShower}></div>;\n}\n\ninterface EmojiShowerProps {\n  zone: ViewportBounds;\n  emoji: string;\n  count: number;\n  onFinish: () => void;\n}\n\nfunction EmojiShower({ zone, emoji, count, onFinish }: EmojiShowerProps) {\n  const BASE_DROP_SIZE = 28;\n  const BASE_VELOCITY_Y = 0.3;\n  const BASE_ACCELERATION_Y = 0.08;\n  const BASE_PIECE_VELOCITY_Y = -5;\n  const BASE_PIECE_VELOCITY_X = 0.3;\n  const OPACITY_DRAIN = -1;\n\n  const makePiecesFromWhole = (wholeSprite: EmojiSprite) => {\n    const pieceVx = BASE_PIECE_VELOCITY_X + Math.random();\n    const pieceVy = BASE_PIECE_VELOCITY_Y + (Math.random() * 2 - 1);\n    const size = Math.ceil(wholeSprite.size / 2);\n\n    const piece1 = {\n      ...cloneEmoji(wholeSprite),\n      type: EmojiSpriteType.PIECE,\n      size,\n    };\n    piece1.position.y -= 1;\n    piece1.velocity = { x: pieceVx, y: pieceVy };\n    piece1.rotation = { tilt: 0.5, speed: 0.001 };\n\n    const piece2 = cloneEmoji(piece1);\n    piece2.velocity.x *= -1;\n    piece2.rotation = { tilt: -0.5, speed: -0.001 };\n\n    return [piece1, piece2];\n  };\n\n  const createInitialEmoji = useCallback(\n    (animationContainerBounds: ViewportBounds) => {\n      const animationBounds = anchorViewportBoundsRelativeTo(\n        zone,\n        animationContainerBounds\n      );\n      const sizeOffset = BASE_DROP_SIZE / 2;\n      const size =\n        BASE_DROP_SIZE + Math.ceil(Math.random() * BASE_DROP_SIZE) - sizeOffset;\n\n      const px =\n        Math.ceil(Math.random() * (zone.width - size)) +\n        animationBounds.topLeft.x;\n      const vy = BASE_VELOCITY_Y + Math.random() * 0.2;\n      const ay = BASE_ACCELERATION_Y + Math.random() * 0.04;\n      const tilt = Math.random() * 2;\n      const rotationalSpeed = Math.random() * 0.01;\n\n      return {\n        version: 0,\n        emoji,\n        type: EmojiSpriteType.WHOLE,\n        size,\n        position: {\n          x: px,\n          y: animationBounds.topLeft.y,\n        },\n        velocity: {\n          x: 0,\n          y: vy,\n        },\n        acceleration: {\n          y: ay,\n        },\n        rotation: {\n          tilt: tilt, //radians,\n          speed: rotationalSpeed, //radians\n        },\n        opacity: 100,\n      };\n    },\n    []\n  );\n\n  const updateEmoji = useCallback(\n    (emoji: EmojiSprite, animationContainerBounds: ViewportBounds) => {\n      const animationBounds = anchorViewportBoundsRelativeTo(\n        zone,\n        animationContainerBounds\n      );\n\n      const bottomBoundary = animationBounds.bottomRight.y - emoji.size;\n\n      const topBoundary = animationBounds.topLeft.y;\n\n      const leftBoundary = animationBounds.topLeft.x;\n\n      const rightBoundary = animationBounds.bottomRight.x - emoji.size;\n\n      if (emoji.type === EmojiSpriteType.PIECE) {\n        if (\n          emoji.position.x <= leftBoundary ||\n          emoji.position.x >= rightBoundary\n        ) {\n          return [];\n        }\n        if (emoji.position.y >= bottomBoundary) {\n          return [];\n        }\n        if (emoji.opacity <= 0) {\n          return [];\n        }\n      }\n\n      if (emoji.type === EmojiSpriteType.WHOLE) {\n        if (emoji.position.y >= bottomBoundary) {\n          return makePiecesFromWhole(emoji);\n        }\n      }\n\n      let newEmoji = cloneEmoji(emoji);\n      newEmoji.velocity.y += emoji.acceleration.y;\n      newEmoji.position.x = Math.min(\n        Math.max(newEmoji.position.x + emoji.velocity.x, leftBoundary),\n        rightBoundary\n      );\n      newEmoji.version++;\n      newEmoji.position.y = Math.min(\n        Math.max(newEmoji.position.y + emoji.velocity.y, topBoundary),\n        bottomBoundary\n      );\n      newEmoji.rotation.tilt += emoji.rotation.speed;\n\n      if (newEmoji.type === EmojiSpriteType.PIECE) {\n        newEmoji.opacity += OPACITY_DRAIN;\n      }\n      return [newEmoji];\n    },\n    []\n  );\n\n  return (\n    <EmojiAnimation\n      count={count}\n      updateEmoji={updateEmoji}\n      createInitialEmoji={createInitialEmoji}\n      onFinish={onFinish}\n    />\n  );\n}\n\nexport default EmojiShower;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}