{"ast":null,"code":"export var CommentType;(function(CommentType){CommentType[\"POOP\"]=\"poop\";CommentType[\"DIAMOND\"]=\"diamond\";})(CommentType||(CommentType={}));export var commentTypeToEmoji=function commentTypeToEmoji(commentType){return commentType===CommentType.POOP?\"ðŸ’©\":\"ðŸ’Ž\";};export var ResponseType;(function(ResponseType){ResponseType[ResponseType[\"ALERT\"]=0]=\"ALERT\";ResponseType[ResponseType[\"ERROR\"]=1]=\"ERROR\";ResponseType[ResponseType[\"OUT_OF_FILES_TO_PICK\"]=2]=\"OUT_OF_FILES_TO_PICK\";ResponseType[ResponseType[\"LOBBY\"]=3]=\"LOBBY\";ResponseType[ResponseType[\"SOURCE_CODE\"]=4]=\"SOURCE_CODE\";ResponseType[ResponseType[\"COMMENTS\"]=5]=\"COMMENTS\";ResponseType[ResponseType[\"BATCH\"]=6]=\"BATCH\";ResponseType[ResponseType[\"NEW_COMMENT\"]=7]=\"NEW_COMMENT\";})(ResponseType||(ResponseType={}));export var RequestType;(function(RequestType){RequestType[RequestType[\"PICK_SOURCE_CODE\"]=1]=\"PICK_SOURCE_CODE\";RequestType[RequestType[\"ADD_COMMENT\"]=2]=\"ADD_COMMENT\";RequestType[RequestType[\"DELETE_COMMENT\"]=3]=\"DELETE_COMMENT\";})(RequestType||(RequestType={}));export var GameStateDispatchEventType;(function(GameStateDispatchEventType){GameStateDispatchEventType[GameStateDispatchEventType[\"WS_RESPONSE\"]=1]=\"WS_RESPONSE\";GameStateDispatchEventType[GameStateDispatchEventType[\"ACK_NEW_COMMENT\"]=2]=\"ACK_NEW_COMMENT\";})(GameStateDispatchEventType||(GameStateDispatchEventType={}));export var lobbyCode={id:\"\",author:\"\",content:\"Waiting for players...\",file_name:\"lobby_waiting_for_players\",file_extension:\"markdown\",file_visit_url:\"https://github.com/rohanshiva/gitgame\",file_display_path:\"rohanshiva/gitgame\"};","map":{"version":3,"names":["CommentType","commentTypeToEmoji","commentType","POOP","ResponseType","RequestType","GameStateDispatchEventType","lobbyCode","id","author","content","file_name","file_extension","file_visit_url","file_display_path"],"sources":["/home/runner/work/gitgame/gitgame/client/src/Interface.ts"],"sourcesContent":["export enum CommentType {\n  POOP = \"poop\",\n  DIAMOND = \"diamond\",\n}\n\nexport interface Lines {\n  start: number;\n  end: number;\n}\n\nexport interface Author {\n  username: string;\n  profile_url: string;\n}\n\nexport interface AddComment {\n  content: string;\n  line_start: number;\n  line_end: number;\n  type: CommentType;\n}\n\nexport interface Comment {\n  content: string;\n  line_start: number;\n  line_end: number;\n  type: CommentType;\n  id: string;\n  author: Author;\n}\n\nexport const commentTypeToEmoji = (commentType: CommentType) => {\n  return commentType === CommentType.POOP ? \"ðŸ’©\" : \"ðŸ’Ž\";\n};\n\nexport interface Player {\n  username: string;\n  profile_url: string;\n  is_connected: boolean;\n  is_host: boolean;\n}\n\nexport interface Code {\n  id: string;\n  author: string;\n  content: string;\n  file_name: string;\n  file_extension: string;\n  file_visit_url: string;\n  file_display_path: string;\n}\n\nexport enum ResponseType {\n  ALERT = 0,\n  ERROR = 1,\n  OUT_OF_FILES_TO_PICK = 2,\n  LOBBY = 3,\n  SOURCE_CODE = 4,\n  COMMENTS = 5,\n  BATCH = 6,\n  NEW_COMMENT = 7,\n}\n\nexport enum RequestType {\n  PICK_SOURCE_CODE = 1,\n  ADD_COMMENT = 2,\n  DELETE_COMMENT = 3,\n}\n\nexport enum GameStateDispatchEventType {\n  WS_RESPONSE = 1,\n  ACK_NEW_COMMENT = 2,\n}\n\nexport interface GameStateDispatchEvent {\n  event_type: GameStateDispatchEventType;\n}\n\nexport interface ResponsePayload extends GameStateDispatchEvent {\n  message_type: ResponseType;\n}\n\nexport interface LobbyPayload extends ResponsePayload {\n  players: Player[];\n}\n\nexport interface SourceCodePayload extends ResponsePayload {\n  code: Code;\n}\n\nexport interface AlertPayload extends ResponsePayload {\n  alert: string;\n}\n\nexport interface CommentsPayload extends ResponsePayload {\n  comments: Comment[];\n}\n\nexport interface NewCommentPayload extends ResponsePayload {\n  comment: Comment;\n}\n\nexport interface BatchPayload extends ResponsePayload {\n  messages: ResponsePayload[];\n}\n\nexport interface AckNewComment extends GameStateDispatchEvent {\n  comment_id: string;\n}\n\nexport interface GameState {\n  players: Player[];\n  host: string;\n  source_code: Code;\n  comments: Comment[];\n  new_comments: Comment[];\n}\n\nexport const lobbyCode: Code = {\n  id: \"\",\n  author: \"\",\n  content: \"Waiting for players...\",\n  file_name: \"lobby_waiting_for_players\",\n  file_extension: \"markdown\",\n  file_visit_url: \"https://github.com/rohanshiva/gitgame\",\n  file_display_path: \"rohanshiva/gitgame\",\n};\n"],"mappings":"AAAA,UAAY,CAAAA,WAAW,CAGtB,UAHWA,WAAW,EAAXA,WAAW,gBAAXA,WAAW,yBAAXA,WAAW,GAAXA,WAAW,MA+BvB,MAAO,IAAM,CAAAC,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAIC,WAAwB,CAAK,CAC9D,MAAO,CAAAA,WAAW,GAAKF,WAAW,CAACG,IAAI,CAAG,IAAI,CAAG,IAAI,CACvD,CAAC,CAmBD,UAAY,CAAAC,YAAY,CASvB,UATWA,YAAY,EAAZA,YAAY,CAAZA,YAAY,qBAAZA,YAAY,CAAZA,YAAY,qBAAZA,YAAY,CAAZA,YAAY,mDAAZA,YAAY,CAAZA,YAAY,qBAAZA,YAAY,CAAZA,YAAY,iCAAZA,YAAY,CAAZA,YAAY,2BAAZA,YAAY,CAAZA,YAAY,qBAAZA,YAAY,CAAZA,YAAY,oCAAZA,YAAY,GAAZA,YAAY,MAWxB,UAAY,CAAAC,WAAW,CAItB,UAJWA,WAAW,EAAXA,WAAW,CAAXA,WAAW,2CAAXA,WAAW,CAAXA,WAAW,iCAAXA,WAAW,CAAXA,WAAW,0CAAXA,WAAW,GAAXA,WAAW,MAMvB,UAAY,CAAAC,0BAA0B,CAGrC,UAHWA,0BAA0B,EAA1BA,0BAA0B,CAA1BA,0BAA0B,iCAA1BA,0BAA0B,CAA1BA,0BAA0B,4CAA1BA,0BAA0B,GAA1BA,0BAA0B,MAiDtC,MAAO,IAAM,CAAAC,SAAe,CAAG,CAC7BC,EAAE,CAAE,EAAE,CACNC,MAAM,CAAE,EAAE,CACVC,OAAO,CAAE,wBAAwB,CACjCC,SAAS,CAAE,2BAA2B,CACtCC,cAAc,CAAE,UAAU,CAC1BC,cAAc,CAAE,uCAAuC,CACvDC,iBAAiB,CAAE,oBACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}