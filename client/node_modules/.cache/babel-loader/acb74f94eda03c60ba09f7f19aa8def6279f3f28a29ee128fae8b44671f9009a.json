{"ast":null,"code":"import _regeneratorRuntime from\"/home/runner/work/gitgame/gitgame/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/runner/work/gitgame/gitgame/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/home/runner/work/gitgame/gitgame/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/runner/work/gitgame/gitgame/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import config from\"../config/index\";import{StatusCodes}from\"http-status-codes\";import api from\"../utils/Api\";var SessionService=/*#__PURE__*/function(){function SessionService(){_classCallCheck(this,SessionService);}_createClass(SessionService,null,[{key:\"makeSession\",value:function(){var _makeSession=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return api.post(config.make.uri);case 2:response=_context.sent;if(!(response.status===StatusCodes.CREATED)){_context.next=7;break;}return _context.abrupt(\"return\",response.data.id);case 7:throw Error(\"Failed to make session: \".concat(response.statusText));case 8:case\"end\":return _context.stop();}},_callee);}));function makeSession(){return _makeSession.apply(this,arguments);}return makeSession;}()}]);return SessionService;}();export default SessionService;","map":{"version":3,"names":["config","StatusCodes","api","SessionService","_classCallCheck","_createClass","key","value","_makeSession","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","post","make","uri","sent","status","CREATED","abrupt","data","id","Error","concat","statusText","stop","makeSession","apply","arguments"],"sources":["/home/runner/work/gitgame/gitgame/client/src/services/Session.ts"],"sourcesContent":["import config from \"../config/index\";\nimport { StatusCodes } from \"http-status-codes\";\nimport api from \"../utils/Api\";\n\nclass SessionService {\n  static async makeSession(): Promise<string> {\n    const response = await api.post(config.make.uri);\n    if (response.status === StatusCodes.CREATED) {\n      return response.data.id;\n    } else {\n      throw Error(`Failed to make session: ${response.statusText}`);\n    }\n  }\n}\n\nexport default SessionService;\n"],"mappings":"sgBAAA,MAAO,CAAAA,MAAM,KAAM,iBAAiB,CACpC,OAASC,WAAW,KAAQ,mBAAmB,CAC/C,MAAO,CAAAC,GAAG,KAAM,cAAc,CAAC,GAEzB,CAAAC,cAAc,kCAAAA,eAAA,EAAAC,eAAA,MAAAD,cAAA,GAAAE,YAAA,CAAAF,cAAA,QAAAG,GAAA,eAAAC,KAAA,gBAAAC,YAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAClB,SAAAC,QAAA,MAAAC,QAAA,QAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACyB,CAAAhB,GAAG,CAACiB,IAAI,CAACnB,MAAM,CAACoB,IAAI,CAACC,GAAG,CAAC,QAA1CR,QAAQ,CAAAG,QAAA,CAAAM,IAAA,MACVT,QAAQ,CAACU,MAAM,GAAKtB,WAAW,CAACuB,OAAO,GAAAR,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAS,MAAA,UAClCZ,QAAQ,CAACa,IAAI,CAACC,EAAE,cAEjB,CAAAC,KAAK,4BAAAC,MAAA,CAA4BhB,QAAQ,CAACiB,UAAU,EAAG,yBAAAd,QAAA,CAAAe,IAAA,MAAAnB,OAAA,GAEhE,YAAAoB,YAAA,SAAAxB,YAAA,CAAAyB,KAAA,MAAAC,SAAA,UAAAF,WAAA,eAAA7B,cAAA,KAGH,cAAe,CAAAA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}